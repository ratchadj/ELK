input {
	file {
		path => ["/var/log/nginx/access-log/*.*"]
		start_position => "beginning"
		type => "nginx-access"
  	}
	file {
		path => ["/var/log/nginx/error-log/*.*"]
		start_position => "beginning"
		type => "nginx-error"
  	}
}

filter {
	if [type] == "nginx-access" {
		grok {
			match => [ "message" , "%{IPORHOST:remote_addr} - %{DATA:remote_user} \[%{HTTPDATE:time_local}\] \"%{NOTSPACE:method:tag} %{NOTSPACE:request_path} %{NOTSPACE:http_version}\" %{NOTSPACE:status} %{DATA:body_bytes_sent} \"%{DATA:http_referer}\" \"%{DATA:http_user_agent}\" \"%{DATA:realip_remote_addr}\" \"%{DATA:http_x_forwarded_for}\""]
		}
		mutate {
			convert => ["response", "integer"]
			convert => ["bytes", "integer"]
			convert => ["responsetime", "float"]
		}
		geoip {
			source => "clientip"
			target => "geoip"
			add_tag => [ "nginx-geoip" ]
		}
		date {
			match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
			remove_field => [ "timestamp" ]
		}
		useragent {
			source => "agent"
		}
	}
	if [type] == "nginx-error" {
		grok{
			match => ["message", "(?<timestamp>%{YEAR}[./]%{MONTHNUM}[./]%{MONTHDAY} %{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER:threadid}\: \*%{NUMBER:connectionid} %{GREEDYDATA:errormessage}, client: %{IP:client}, server: %{GREEDYDATA:server}, request: \"(?<httprequest>%{WORD:httpcommand} %{UNIXPATH:httpfile} HTTP/(?<httpversion>[0-9.]*))\"(, )?(upstream: \"(?<upstream>[^,]*)\")?(, )?(host: \"(?<host>[^,]*)\")?"]
		}
	}
}

output {
	elasticsearch {
		hosts => ["elasticsearch:9200"]
		index => "nginx-%{+YYYY.MM.dd}"
   		document_type => "nginx_logs"
	}
}
